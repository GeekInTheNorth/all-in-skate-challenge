@using Microsoft.AspNetCore.Identity
@inject SignInManager<AllInSkateChallenge.Features.Data.Entities.ApplicationUser> SignInManager
@inject UserManager<AllInSkateChallenge.Features.Data.Entities.ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var userDetails = await UserManager.GetUserAsync(User);

    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @userDetails.SkaterName</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="SkaterProgress" asp-action="Progress" title="Your Progress">Your Progress</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-controller="SkaterLog" asp-action="Index" title="Log Miles">Your Log</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark font-weight-bold">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
