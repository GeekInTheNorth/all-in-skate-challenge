@model AllInSkateChallenge.Features.Framework.Models.PageViewModel<AllInSkateChallenge.Features.LeaderBoard.LeaderBoardModel>

@{
    Layout = "_PageViewModelLayout";
}

@functions{
    string GetPositionClass(int position)
    {
        switch (position)
        {
            case 1:
                return "leaderboard-position leaderboard-position--first";
            case 2:
                return "leaderboard-position leaderboard-position--second";
            case 3:
                return "leaderboard-position leaderboard-position--third";
            default:
                return "leaderboard-position";
        }
    }
}

@if (!Model.HasPaid)
{
    <div class="row">
        <div class="col-xl-12">
            <div class="alert alert-warning" role="alert">
                Please note that ALL IN has either not yet received or not yet processed your Skate Challenge entry fee. Your progress will not be visible in the leader board until then.
            </div>
        </div>
    </div>
}

<form asp-controller="Leaderboard" asp-action="Index" method="get">
    <div class="input-group mt-3 mb-3">
        <div class="input-group-prepend">
            <span class="input-group-text" id="target-distance">Target Distance</span>
        </div>
        <select name="target" asp-for="@Model.Content.SelectedTarget" asp-items="@Model.Content.Targets" class="form-control" aria-label="Sort Order" aria-describedby="target-distance"></select>
        <div class="input-group-append">
            <button class="btn btn-primary" type="submit" id="search-button">Reload</button>
        </div>
    </div>
</form>

<div class="row mt-3">
    <div class="col-xl-12">
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Skater</th>
                    <th scope="col">Total Miles</th>
                </tr>
            </thead>
            @if (Model.Content.Entries != null && Model.Content.Entries.Any())
            {
                <tbody>
                    @foreach (var entry in Model.Content.Entries)
                    {
                        <tr>
                            <td class="align-middle"><span class="@GetPositionClass(entry.Place)">@entry.Place</span></td>
                            <td class="align-middle">
                                <picture>
                                    @if (!string.IsNullOrWhiteSpace(entry.ProfileImage))
                                    {
                                        <img src="@entry.ProfileImage" alt="@entry.SkaterName Profile Image" class="leaderboard-profile" />
                                    }
                                    else
                                    {
                                        <source media="(min-width:576px)" srcset="@entry.GravatarUrl?s=48">
                                        <source srcset="@entry.GravatarUrl?s=28">
                                        <img src="@entry.GravatarUrl?s=28" alt="@entry.SkaterName Gravatar Profile Image" class="leaderboard-profile" />
                                    }
                                </picture>
                                @entry.SkaterName
                            </td>
                            <td class="align-middle">@entry.TotalMiles.ToString("F2")</td>
                        </tr>
                    }
                </tbody>
            }
        </table>
    </div>
</div>

<div id="leaderboard-list-app" class="row mt-3">
    <div class="col-xl-12">
        <table class="table">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">Skater</th>
                    <th scope="col">Total Miles</th>
                </tr>
            </thead>
            <tbody>
                <template v-for="skater in skaters">
                    <tr>
                        <td class="align-middle"><span v-bind:class="getPositionClass(skater.position)">{{skater.position}}</span></td>
                        <td class="align-middle">
                            <img v-bind:src="skater.profileImage" v-bind:alt="getProfileAltText(skater.skaterName)" class="leaderboard-profile" />
                            {{skater.skaterName}}
                        </td>
                        <td class="align-middle">{{skater.totalMiles}}</td>
                    </tr>
                </template>
            </tbody>
        </table>
    </div>
    
</div>

@section Scripts{
    <script src="https://unpkg.com/vue@2.6.12/dist/vue.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var leaderBoardApp = new Vue({
                el: '#leaderboard-list-app',
                data: {
                    skaters: []
                },
                mounted: function () {
                    this.getLeaderBoard("ThereAndBackAgain");
                },
                methods: {
                    getPositionClass: function (position) {
                        switch (position) {
                            case 1:
                                return "leaderboard-position leaderboard-position--first";
                                break;
                            case 2:
                                return "leaderboard-position leaderboard-position--second";
                                break;
                            case 3:
                                return "leaderboard-position leaderboard-position--third";
                                break;
                            default:
                                return "leaderboard-position";
                                break;
                        }
                    },
                    getProfileAltText: function (skaterName) {
                        return skaterName + " Profile Image";
                    },
                    getLeaderBoard: function (target) {
                        var url = "" + target;
                        $.get(url, function (data) {
                            leaderBoardApp.skaters = data;
                        });
                    }
                }
            });
        });
    </script>
}