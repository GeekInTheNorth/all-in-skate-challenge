@model AllInSkateChallenge.Features.Framework.Models.PageViewModel<AllInSkateChallenge.Features.Skater.StravaImport.StravaImportViewModel>

@{
    Layout = "_PageViewModelLayout";
}

@if (Model.Content.Fault != null)
{
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">Oh Dear! we could not retrieve your Strava Activities!</h4>
        <p>Strava raised the following message: @Model.Content.Fault.Message</p>
        @if (Model.Content.Fault.Errors != null && Model.Content.Fault.Errors.Any())
        {
            <hr>
            <ul>
                @foreach (var error in Model.Content.Fault.Errors)
                {
                    <li><strong>@error.Resource</strong> of <strong>@error.Field</strong> is <strong>@error.Code</strong></li>
                }
            </ul>
        }
    </div>
}

@if (Model.Content.Activities != null)
{
    <div id="activityAlert" class="alert alert-success fade show" role="alert" style="display:none;">
        <strong>Awesome!</strong> Your strava activity has been imported. Why not check out <a asp-controller="SkaterProgress" asp-action="Progress" class="alert-link">Your Progress</a> now?
    </div>

    <div class="form-check">
        <input type="checkbox" class="form-check-input js-toggle-ineligible-imports" id="ineligibleImportToggle">
        <label class="form-check-label" for="ineligibleImportToggle">Show activities which are not eligible for importing.</label>
    </div>

    <table class="table table-hover mt-3">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Activity Type</th>
                <th scope="col">Started</th>
                <th scope="col">Miles</th>
                <th scope="col">Imported</th>
                <th scope="col">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var activity in Model.Content.Activities)
            {
                <tr data-activity-id="@activity.ActivityId" data-activity-eligible="@activity.IsEligableActivity" style="@(activity.IsEligableActivity ? "" : "display: none;")">
                    <td class="align-middle">@activity.ActivityType</td>
                    <td class="align-middle">@activity.StartDate.ToString("dd/MM/yyyy HH:mm")</td>
                    <td class="align-middle">@activity.Miles.ToString("F2") miles</td>
                    <td class="align-middle"><span class="js-import-strava-state" data-activity-id="@activity.ActivityId">@(activity.IsImported ? "Yes" : "No")</span></td>
                    <td class="align-middle js-action-delete-column">
                        @if (!activity.IsImported && activity.IsEligableActivity)
                        {
                            <button type="button" class="btn btn-primary js-import-strava" data-activity-id="@activity.ActivityId" data-start-date="@activity.StartDate.ToString("O")" data-miles="@activity.Miles">Import</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".js-toggle-ineligible-imports").click(function () {
                $("tr[data-activity-eligible='False']").toggle(this.checked);
            });

            $(".js-import-strava").click(function (event) {
                var activityId = $(event.target).data("activity-id");
                var startDate = $(event.target).data("start-date");
                var miles = $(event.target).data("miles");

                $.post("/skater/skate-log/strava-import/save", { "activityId": activityId, "logged": startDate, "miles": miles })
                    .done(function () {
                        $("button[data-activity-id='" + activityId + "']").hide();
                        $("span[data-activity-id='" + activityId + "']").html("Yes");
                        CreateNotification("success", "<strong>Awesome!</strong> Your strava activity has been imported. Why not check out <a href='/skater/progress/' class='alert-link'>Your Progress</a> now?");
                    })
                    .fail(function () {
                        CreateNotification("danger", "<strong>Oh No!</strong>, something went wrong importing your activity. Please try again in a minute.");
                    });
            });

            IgnoreIneligibleActivities();
            $("tr[data-activity-eligible='False']").toggle(this.checked);
        });

        function IgnoreIneligibleActivities() {
            var stravaActivityIds = $("tr[data-activity-eligible='False']").map(function () { return $(this).data("activity-id"); }).get();

            $.post("/skater/skate-log/strava-import/ignore", { "StravaActivityIds": stravaActivityIds })
                .done(function (data) {
                    if (data.activitiesIgnored == 1) {
                        CreateNotification("success", "We have identified 1 new activity that is not eligible for this challenge, you will no longer recieve a notification about this activity.");
                    }
                    else if (data.activitiesIgnored > 1) {
                        CreateNotification("success", "We have identified " + data.activitiesIgnored + " new activities that are not eligible for this challenge, you will no longer recieve notifications about these activities.");
                    }
                });
        }

        function CreateNotification(type, message) {
            $("#activityAlert").html(message);

            if (type === "success") {
                $("#activityAlert").removeClass("alert-danger");
                $("#activityAlert").addClass("alert-success");
            } else {
                $("#activityAlert").removeClass("alert-success");
                $("#activityAlert").addClass("alert-danger");
            }

            $("#activityAlert").show();
        }
    </script>
}
