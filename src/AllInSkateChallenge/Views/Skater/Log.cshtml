@using AllInSkateChallenge.Features.Skater;
@model AllInSkateChallenge.Features.Framework.Models.PageViewModel<AllInSkateChallenge.Features.Skater.SkateLog.SkaterLogViewModel>

@{
    Layout = "_PageViewModelLayout";
}

<div class="row">
    <div class="col-xl-12">
        <button type="button" class="btn btn-primary js-add-mileage-entry mt-3 mb-3">+ Create New Mileage Entry</button>
        @if (Model.IsStravaUser && Model.DisplayStravaNotification)
        {
            <a asp-controller="StravaImport" asp-action="Index" class="btn btn-strava" title="Import Activities from Strava"></a>
        }
        else if (Model.IsStravaUser && !Model.DisplayStravaNotification)
        {
            <button type="button" class="btn btn-strava btn-strava-disabled" name="provider" title="You have no new activities to import from Strava" disabled></button>
        }
    </div>
</div>

@if (Model.Content.RecordExists)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        Your activity has not been created as it already exists. Activities which have the same date, distance and name are considered to be duplicate entries.
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Journey</th>
            <th scope="col">Logged</th>
            <th scope="col">Miles</th>
            @if (Model.IsStravaUser)
            {
                <th scope="col" class="mobile-hidden">Source</th>
            }
            <th scope="col" class="js-action-delete-column">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in Model.Content.Entries)
        {
            <tr class="js-mileage-entry-row" data-entry-id="@entry.SkateLogEntryId">
                <td class="align-middle">@entry.Name</td>
                <td class="align-middle">@entry.Logged.ToString("dd/MM/yyyy HH:mm")</td>
                <td class="align-middle">@entry.DistanceInMiles.ToString("F2")</td>
                @if (Model.IsStravaUser)
                {
                    <td class="align-middle mobile-hidden">@(string.IsNullOrWhiteSpace(entry.StravaId) ? "Manual" : "Strava")</td>
                }
                <td class="align-middle js-action-delete-column">
                    <button type="button" class="btn btn-danger js-delete-mileage-entry" data-entry-id="@entry.SkateLogEntryId">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="modal fade" id="deleteEntryModal" tabindex="-1" role="dialog" aria-labelledby="deleteEntryLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteEntryLabel">Delete Mileage Entry</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this mileage log entry?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-danger js-confirm-delete-mileage-entry">Delete</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addEntryModal" tabindex="-1" role="dialog" aria-labelledby="saveEntryLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="saveEntryLabel">Log new miles!</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="createForm" method="post" asp-controller="SkaterLog" asp-action="Index" asp-antiforgery="true">
                <div class="modal-body">
                    <div class="form-group">
                        <label for="distanceUnit">Miles or Kilometres?</label>
                        @Html.DropDownList(nameof(INewSkaterLogEntry.DistanceUnit), new SelectList(Enum.GetValues(typeof(DistanceUnit))), new { @class = "form-control", aria_describedby = "distanceUnitHelp" })
                        <small id="distanceUnitHelp" class="form-text text-muted">Distance can be logged in miles or kilometres, but will be converted into miles.</small>
                    </div>
                    <div class="form-group">
                        <label for="distance">Distance this session</label>
                        @Html.TextBox(nameof(INewSkaterLogEntry.Distance), Model.Content.Distance, new { @type = "number", @class = "form-control", aria_describedby = "distanceHelp", step = "0.01", min = "0", max = "1000" })
                        <small id="distanceHelp" class="form-text text-muted">Partial miles or kilometres can be entered by typing a decimal value e.g. 4.5.</small>
                    </div>
                    <div class="form-group">
                        <label for="journeyName">Journey Name</label>
                        @Html.TextBox(nameof(INewSkaterLogEntry.JourneyName), Model.Content.JourneyName, new { @class = "form-control", aria_describedby = "journeyNameHelp" })
                        <small id="journeyNameHelp" class="form-text text-muted">An optional name for your skating session.</small>
                    </div>
                    <div class="form-group">
                        <label>Date Skated</label>
                        @Html.TextBox(nameof(INewSkaterLogEntry.DateSkated), Model.Content.DateSkated, new { @type = "date", @class = "form-control", aria_describedby = "dateSkatedHelp" })
                        <small id="dateSkatedHelp" class="form-text text-muted">Today's date will be used if this field is left blank.</small>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary js-confirm-create-mileage-entry">Create</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            $(".js-delete-mileage-entry").click(function (event) {
                $(".js-confirm-delete-mileage-entry").data("entry-id", ($(event.target).data("entry-id")));
                $("#deleteEntryModal").modal({ keyboard: true, focus: true });
            });

            $(".js-confirm-delete-mileage-entry").click(function (event) {
                var rowSelector = "tr[data-entry-id='" + $(event.target).data("entry-id") + "']";
                $.post("/skater/skate-log/delete", { "mileageEntryId": $(event.target).data("entry-id") })
                    .done(function () {
                        $(rowSelector).remove();
                        $("#deleteEntryModal").modal('hide');
                    });
            });

            $(".js-add-mileage-entry").click(function () {
                $("#addEntryModal").modal({ keyboard: true, focus: true });
            });

            $("#createForm").submit(function (event) {
                $(".js-confirm-create-mileage-entry").prop("disabled", true);

                setTimeout(function () { $(".js-confirm-create-mileage-entry").prop("disabled", false); }, 5000);
            });
        });
    </script>
}